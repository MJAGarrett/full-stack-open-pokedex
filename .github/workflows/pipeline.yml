name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  SKIP_VERSIONING: ${{ contains(join(github.event.commits.*.message), '#skip') }}

jobs:
  # Using an ubuntu-20.04 virtual environment. Use what you will have in production.
  simple_deployment_pipeline:
    timeout-minutes: 60
    runs-on: ubuntu-20.04
    steps:
      # It uses public actions (like functions) to checkout the code and prepare a node environment
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4 
        with: 
          node-version: '20'
      - name: Install Dependencies
        run: npm ci
      # Environment now setup, we can run tests, linting, etc.
      - name: Check Style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: E2E Test
        run: |
          npx playwright install --with-deps
          npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled( )}}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Trigger deployment
        if: ${{ github.event_name == 'push' }}
        run: curl ${{ secrets.RENDER_DEPLOY_URL }}

  Tag_Release:
    runs-on: ubuntu-20.04
    needs: [simple_deployment_pipeline]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4 
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !env.SKIP_VERSIONING }}
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch